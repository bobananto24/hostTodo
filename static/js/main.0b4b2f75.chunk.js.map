{"version":3,"sources":["TodoList.js","Todo.js","App.js","index.js"],"names":["TodoList","todos","toggleTodo","map","todo","onChange","id","checked","completed","type","name","Todo","useState","setTodos","useEffect","savedTodos","JSON","parse","localStorage","getItem","setItem","stringify","inputValue","useRef","filter","e","length","ref","onClick","current","value","prev","uuidv4","add","newTodos","del","find","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6KACaA,EAAW,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAChC,OACE,8BACGD,EAAME,KAAI,SAACC,GAAD,OACT,gCACE,uBACEC,SAAU,kBAAMH,EAAWE,EAAKE,KAChCC,QAASH,EAAKI,UACdC,KAAK,aAENL,EAAKM,OANEN,EAAKE,U,QCFVK,EAAO,WAClB,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,UAC/CJ,GAAYF,EAASE,KACxB,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUpB,MAC5C,CAACA,IAEJ,IAAIqB,EAAaC,mBAuBjB,OACE,qCACE,6CACatB,EAAMuB,QAAO,SAACC,GAAD,OAAuB,IAAhBA,EAAEjB,aAAqBkB,OADxD,YAGA,uBAAOC,IAAKL,EAAYb,KAAK,SAC7B,wBAAQmB,QAAS,kBA3BT,WACV,IAAIlB,EAAOY,EAAWO,QAAQC,MACjB,KAATpB,IACJG,GAAS,SAACkB,GAAD,4BACJA,GADI,CAEP,CAAEzB,GAAI0B,cAAUtB,KAAMA,EAAMF,WAAW,QAEzCc,EAAWO,QAAQC,MAAQ,MAoBFG,IAAvB,iBACA,wBAAQL,QAAS,kBAlBT,WACV,IAAIM,EAAWjC,EAAMuB,QAAO,SAACC,GAAD,OAAuB,IAAhBA,EAAEjB,aACrCK,EAASqB,GAgBgBC,IAAvB,oBACA,8BACE,cAAC,EAAD,CAAUlC,MAAOA,EAAOC,WAfX,SAACI,GAClB,IAAI4B,EAAQ,YAAOjC,GACfG,EAAO8B,EAASE,MAAK,SAACX,GAAD,OAAOA,EAAEnB,KAAOA,KACzCF,EAAKI,WAAaJ,EAAKI,UACvBK,EAASqB,YClCAG,EAAM,kBAAM,cAAC,EAAD,KCEzBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0b4b2f75.chunk.js","sourcesContent":["import React from \"react\";\nexport const TodoList = ({ todos, toggleTodo }) => {\n  return (\n    <div>\n      {todos.map((todo) => (\n        <div key={todo.id}>\n          <input\n            onChange={() => toggleTodo(todo.id)}\n            checked={todo.completed}\n            type=\"checkbox\"\n          ></input>\n          {todo.name}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { TodoList } from \"./TodoList\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport const Todo = () => {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    const savedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n    if (savedTodos) setTodos(savedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  let inputValue = useRef();\n\n  const add = () => {\n    let name = inputValue.current.value;\n    if (name === \"\") return;\n    setTodos((prev) => [\n      ...prev,\n      { id: uuidv4(), name: name, completed: false },\n    ]);\n    inputValue.current.value = null;\n  };\n\n  const del = () => {\n    let newTodos = todos.filter((e) => e.completed === false);\n    setTodos(newTodos);\n  };\n\n  const toggleTodo = (id) => {\n    let newTodos = [...todos];\n    let todo = newTodos.find((e) => e.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n  return (\n    <>\n      <div>\n        TodoList ({todos.filter((e) => e.completed === false).length} left)\n      </div>\n      <input ref={inputValue} type=\"text\" />\n      <button onClick={() => add()}>Add</button>\n      <button onClick={() => del()}>Delete</button>\n      <div>\n        <TodoList todos={todos} toggleTodo={toggleTodo} />\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Todo } from \"./Todo\";\nexport const App = () => <Todo />;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}